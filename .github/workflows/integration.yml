name: Run Integration Tests

on:
  push:            # Trigger the workflow on push
  pull_request:    # Trigger the workflow on pull requests

jobs:
  test:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    services:
      backend:
        image: node:16  # You can specify the image that runs npm (e.g., node:16).
        ports:
          - 8080:8080  # Expose port 8080 for the frontend (if needed)
        options: --health-cmd "curl --fail http://localhost:8080 || exit 1" --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Check out the repository code

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Adjust the Python version if needed

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Node.js and Frontend Dependencies
        run: |
          sudo apt-get install -y nodejs
          sudo apt-get install -y npm
          npm install  # Install frontend dependencies

      - name: Start FastAPI server with uvicorn
        working-directory: src/backend
        run: |
          set USE_SELE_CONFIG=false
          alembic upgrade head  # Apply database migrations
          uvicorn app.main:app --host 0.0.0.0 --port 8000 &  # Run FastAPI server in the background
          sleep 10  # Give it some time to start up

      - name: Start frontend server
        working-directory: src/filmHub
        run: |
          set USE_SELE_CONFIG=false
          npm run serve &  # Run the frontend server in the background
          sleep 20  # Give it time to start up

      - name: Run tests
        working-directory: src/backend  # Ensure the tests are running from the backend directory
        run: |
          pytest app/tests/integration  # Run integration tests
